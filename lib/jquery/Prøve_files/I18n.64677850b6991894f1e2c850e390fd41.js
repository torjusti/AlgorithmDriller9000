Fronter.I18n=(function($){'use strict';var cache={},customerUrl=Fronter.Util.Config.get('customerUrl'),webServiceUrl=customerUrl+'/webservice/i18n/getstrings.php',cacheTranslation=function(key,value){cache[value]=key;},onStringsTranslated=function(options,deferred){return function(response){_(response.ids).each(cacheTranslation);getTranslatedStrings(options,deferred);}},onServiceFail=function(){console.warn('I18n service not available');},formatString=function(string){try{return string.replace('IDS_','');}catch(e){console.log(typeof string);}},formatStrings=function(strings){return _(strings).map(formatString);},getTranslationFromService=function(options,deferred){$.ajax({url:webServiceUrl,type:'POST',dataType:'json',data:{ids:options.newStrings},async:!options.synchronous,success:onStringsTranslated(options,deferred),fail:onServiceFail});},createTranslationObject=function(strings){var serviceObj={};_(strings).each(function(string){serviceObj[string]=null;});return serviceObj;},translate=function(idsStrings,callback,synchronous){var notInCache,options,deferred=$.Deferred();if(_(idsStrings).isString()){idsStrings=[idsStrings];}
idsStrings=formatStrings(idsStrings);notInCache=_(idsStrings).difference(_(cache).keys());options={'idsStrings':idsStrings,'newStrings':createTranslationObject(notInCache),'callback':callback,'synchronous':synchronous||false};if(_(notInCache).isEmpty()){getTranslatedStrings(options,deferred);}else{getTranslationFromService(options,deferred);}
return deferred;},getString=function(key){return cache[key]||undefined;},getTranslatedStrings=function(options,deferred){var translatedStrings={};_(options.idsStrings).each(function(string){translatedStrings[string]=getString(string);});if(options.callback){options.callback(translatedStrings);}
deferred.resolve(translatedStrings);};return{'translate':translate};}(jQuery));