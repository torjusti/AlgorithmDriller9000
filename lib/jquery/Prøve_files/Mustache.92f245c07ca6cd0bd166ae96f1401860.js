Fronter.Mustache={TYPE_VIEW:'view',TYPE_WIDGET:'widget',TYPE_SKIN:'skin',TEMPLATE_LOAD_ERROR:'templateLoadError',toBeTranslated:{},templateCache:{}};Fronter.Mustache.validTypes=[Fronter.Mustache.TYPE_VIEW,Fronter.Mustache.TYPE_WIDGET,Fronter.Mustache.TYPE_SKIN];Fronter.Mustache.getTemplateFileContents=function(template_file,template_type,callback){"use strict";var templateUrl;template_type=template_type!==null?template_type:Fronter.Mustache.TYPE_VIEW;if(jQuery.inArray(template_type,Fronter.Mustache.validTypes)==-1){throw new Error('InvalidTemplateType');}
templateUrl=Fronter.Util.Config.get("customerUrl")+"/static/"+ template_type+"/"+ template_file+".mustache";jQuery.ajax({url:templateUrl,dataType:"text",success:callback,error:function(){callback(Fronter.Mustache.TEMPLATE_LOAD_ERROR);}});};Fronter.Mustache.renderTemplate=function(template,view,callback){"use strict";var content,partials={};view.translate=function(){return Fronter.Mustache.translate;};view.duration=function(){return Fronter.Mustache.duration;};view.absoluteurl=function(){return Fronter.Mustache.absoluteurl;};if(view.partials){partials=_(view.partials).clone();delete view.partials;}
content=Mustache.to_html(template,view,partials);Fronter.Mustache.getIdsStrings(function(translated){jQuery.each(translated,function(index,value){var regex=new RegExp(Fronter.Mustache.wrapIdsString(index),'gi');content=content.replace(regex,value);});callback(content);});};Fronter.Mustache.renderTemplateFile=function(template_file,view,template_type,callback){"use strict";var cacheKey=template_type+'_'+ template_file;if(_.isUndefined(Fronter.Mustache.templateCache[cacheKey])){Fronter.Mustache.getTemplateFileContents(template_file,template_type,function(template){Fronter.Mustache.cacheTemplate(cacheKey,template);Fronter.Mustache.renderTemplate(template,view,callback);});}else{Fronter.Mustache.renderTemplate(Fronter.Mustache.templateCache[cacheKey],view,callback);}}
Fronter.Mustache.preloadTemplateFiles=function(templates){_(templates).each(function(template){Fronter.Mustache.preloadTemplateFile(template.file,template.type);});};Fronter.Mustache.preloadTemplateFile=function(template_file,template_type){"use strict";var cacheKey=template_type+'_'+ template_file;if(_.isUndefined(Fronter.Mustache.templateCache[cacheKey])){Fronter.Mustache.getTemplateFileContents(template_file,template_type,function(template){Fronter.Mustache.cacheTemplate(cacheKey,template);});}}
Fronter.Mustache.cacheTemplate=function(key,template){"use strict";Fronter.Mustache.templateCache[key]=template;return Fronter.Mustache.templateCache[key];}
Fronter.Mustache.translate=function(ids_string){"use strict";var translated=ids_string;if(typeof i18n==='function'){translated=i18n(ids_string);}
if(translated!==ids_string){return translated;}
Fronter.Mustache.toBeTranslated[ids_string]=null;return Fronter.Mustache.wrapIdsString(ids_string);};Fronter.Mustache.getIdsStrings=function(callback){"use strict";if(jQuery.isEmptyObject(Fronter.Mustache.toBeTranslated)){callback({});}else{jQuery.ajax({url:Fronter.Util.Config.get('customerUrl')+"/webservice/i18n/getstrings.php",type:'POST',contentType:"application/x-www-form-urlencoded",dataType:'json',data:{ids:Fronter.Mustache.toBeTranslated},success:function(response){var id;Fronter.Mustache.toBeTranslated={};if(typeof i18n_add==='function'){_(response.ids).each(function(value,id){i18n_add(id,response.ids[id]);});}
callback(response.ids);}});}};Fronter.Mustache.wrapIdsString=function(ids_string){"use strict";return'FRONTER_IDS_'+ ids_string+'_FRONTER_IDS';};Fronter.Mustache.duration=function(string,render){"use strict";var params=render(string).split('||');string=Fronter.Format.Duration.format(params[1],params[0]);return string;};Fronter.Mustache.absoluteurl=function(path,render){"use strict";path=render(path);if(path.indexOf('/')===0&&path.indexOf('://')===-1){path=Fronter.Util.Config.get("customerUrl")+ path;}
return path;};